// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/test/proto/test.proto
package com.levelmoney.kbuilders.test.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class Person extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_FIRST = "";
  public static final String DEFAULT_LAST = "";
  public static final List<Address> DEFAULT_ADDRESS = Collections.emptyList();
  public static final List<String> DEFAULT_PHONE = Collections.emptyList();

  @ProtoField(tag = 1, type = STRING)
  public final String first;

  @ProtoField(tag = 2, type = STRING)
  public final String last;

  @ProtoField(tag = 3, label = REPEATED, messageType = Address.class)
  public final List<Address> address;

  @ProtoField(tag = 4, type = STRING, label = REPEATED)
  public final List<String> phone;

  public Person(String first, String last, List<Address> address, List<String> phone) {
    this.first = first;
    this.last = last;
    this.address = immutableCopyOf(address);
    this.phone = immutableCopyOf(phone);
  }

  private Person(Builder builder) {
    this(builder.first, builder.last, builder.address, builder.phone);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Person)) return false;
    Person o = (Person) other;
    return equals(first, o.first)
        && equals(last, o.last)
        && equals(address, o.address)
        && equals(phone, o.phone);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = first != null ? first.hashCode() : 0;
      result = result * 37 + (last != null ? last.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 1);
      result = result * 37 + (phone != null ? phone.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Person> {

    public String first;
    public String last;
    public List<Address> address;
    public List<String> phone;

    public Builder() {
    }

    public Builder(Person message) {
      super(message);
      if (message == null) return;
      this.first = message.first;
      this.last = message.last;
      this.address = copyOf(message.address);
      this.phone = copyOf(message.phone);
    }

    public Builder first(String first) {
      this.first = first;
      return this;
    }

    public Builder last(String last) {
      this.last = last;
      return this;
    }

    public Builder address(List<Address> address) {
      this.address = checkForNulls(address);
      return this;
    }

    public Builder phone(List<String> phone) {
      this.phone = checkForNulls(phone);
      return this;
    }

    @Override
    public Person build() {
      return new Person(this);
    }
  }
}
